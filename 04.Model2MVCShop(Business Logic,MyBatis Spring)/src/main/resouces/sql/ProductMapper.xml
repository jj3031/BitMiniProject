<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
 	
	<resultMap id="productSelectMap" type="product">
		<result property="prodNo" 				column="PROD_NO" 				jdbcType="NUMERIC"/>
		<result property="prodName"	   			column="PROD_NAME" 				jdbcType="VARCHAR" />
		<result property="prodDetail" 			column="PROD_DETAIL" 			jdbcType="VARCHAR" />
		<result property="manuDate" 			column="MANUFACTURE_DAY" 		jdbcType="VARCHAR" />
		<result property="price" 				column="PRICE" 					jdbcType="NUMERIC" />
		<result property="fileName" 			column="IMAGE_FILE" 			jdbcType="VARCHAR" />
		<result property="regDate" 				column="REG_DATE" 				jdbcType="DATE" />
		<result property="quantity" 			column="QUANTITY" 				jdbcType="NUMERIC"  />
		<result property="remain" 			column="SUM" 				jdbcType="NUMERIC"  />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert 	id="addProduct"		parameterType="product" >
		INSERT 
	 	INTO PRODUCT(PROD_NO, PROD_NAME, PROD_DETAIL,PRICE,IMAGE_FILE,REG_DATE, QUANTITY) 
	 	values (seq_product_prod_no.nextval, #{prodName}, #{prodDetail},#{price},#{fileName}, SYSDATE , #{quantity})
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select 	id="getProduct"	parameterType="int"	resultMap="productSelectMap">
		SELECT PRODUCT.*  ,  A.SUM 
		FROM PRODUCT LEFT OUTER JOIN (SELECT PROD_NO, SUM(purchaseQt) SUM FROM TRANSACTION GROUP BY prod_no) A ON PRODUCT.PROD_NO = A.PROD_NO
		where PRODUCT.PROD_NO = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update	id="updateProduct"	parameterType="product" >
	   	update PRODUCT
	   	<set>
	   		PROD_NAME 	= #{prodName} ,
			PROD_DETAIL	= #{prodDetail},
			MANUFACTURE_DAY	= #{manuDate} ,
			PRICE				=	#{price},
			IMAGE_FILE	=	#{fileName}
	   	</set>
	   	where PROD_NO= = #{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT PRODUCT.*  ,  A.SUM 
										FROM PRODUCT LEFT OUTER JOIN (SELECT PROD_NO, SUM(purchaseQt) SUM FROM TRANSACTION GROUP BY prod_no) A ON PRODUCT.PROD_NO = A.PROD_NO
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				PROD_NO LIKE '%'||#{searchKeyword}||'%' 
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				PROD_NAME LIKE '%'||#{searchKeyword}||'%' 
													</if>
													<if test="searchCondition == 3 and searchKeyword !='' ">
										 				PRICE = #{searchKeyword} 
													</if>
												</where>
											</if>
											<if test="orderCondition != null">
												<if test="orderCondition == priceAsc">
													order by PRICE ASC
												</if>
												<if test="orderCondition == priceDesc">
													order by PRICE DESC
												</if>
												<if test="orderCondition == prodNoAsc">
													order by PROD_NO
												</if>
											</if>
											) inner_table
						WHERE ROWNUM &lt;= #{endRowNum} )
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 	<!--  위 두번째 subQuery 의  
	 			WHERE ROWNUM &lt;= #{endRowNum} ) 는
	 			WHERE ROWNUM <= #{endRowNum} ) 의미이며..
	 			< 는 keyword 로 &lt; 를	사용.
	 			
	 			<![CDATA[  ~~~  ]]> 를 이용하여 아래와 같이 사용  할 수 있다.
	 			CDATA ==> Character Data 의 의미 Java 에서 \n 같은 특수문자 처리  

				WHERE ROWNUM <![CDATA[ <=]]> #{endRowNum} )
		-->
	
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT PRODUCT.*  ,  A.SUM 
				FROM PRODUCT LEFT OUTER JOIN (SELECT PROD_NO, SUM(purchaseQt) SUM FROM TRANSACTION GROUP BY prod_no) A ON PRODUCT.PROD_NO = A.PROD_NO
											<if test="searchCondition != null">
												<where>
													<if test="searchCondition == 1 and searchKeyword !='' ">
										 				PROD_NO LIKE '%'||#searchKeyword#||'%' 
													</if>
													<if test="searchCondition == 2 and searchKeyword !='' ">
										 				PROD_NAME LIKE '%'||#searchKeyword#||'%' 
													</if>
													<if test="searchCondition == 3 and searchKeyword !='' ">
										 				PRICE = #{searchKeyword} 
													</if>
												</where>
											</if>
											<if test="orderCondition != null">
												<if test="orderCondition == priceAsc">
													order by PRODUCT.PRICE ASC
												</if>
												<if test="orderCondition == priceDesc">
													order by PRODUCT.PRICE DESC
												</if>
												<if test="orderCondition == prodNoAsc">
													order by PRODUCT.PROD_NO
												</if>
											</if>) countTable						
	 </select>
	 
</mapper>